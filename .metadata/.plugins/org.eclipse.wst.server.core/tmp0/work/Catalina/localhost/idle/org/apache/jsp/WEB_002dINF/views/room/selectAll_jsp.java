/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-07-06 07:15:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.room;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class selectAll_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1675922414281L));
    _jspx_dependants.put("jar:file:/C:/Users/rsm50/Desktop/idle/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/finalProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<title>채팅목록</title>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js\"\r\n");
      out.write("	integrity=\"sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js\"\r\n");
      out.write("	integrity=\"sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdnjs.cloudflare.com/ajax/libs/sockjs-client/1.6.1/sockjs.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdnjs.cloudflare.com/ajax/libs/stomp.js/2.3.3/stomp.min.js\"></script>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css\"\r\n");
      out.write("	type=\"text/css\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/css/roomSelectOne.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- 디자인 : https://bootsnipp.com/snippets/1ea0N -->\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	\r\n");
      out.write("	$(function(){\r\n");
      out.write("		\r\n");
      out.write("		var roomNum = null;\r\n");
      out.write("		var user_id = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("		\r\n");
      out.write("		function handleMessageReceived(message) {\r\n");
      out.write("		    var msg = JSON.parse(message.body);\r\n");
      out.write("		    // 메시지를 받은 방의 roomNum과 unreadCount 정보를 사용하여 업데이트\r\n");
      out.write("		    updateReadCount(msg.room_num, msg.unread_count);\r\n");
      out.write("		  }\r\n");
      out.write("		\r\n");
      out.write("		$('.chat_list #delete').click(function(event) {\r\n");
      out.write("		    event.stopPropagation();\r\n");
      out.write("		    console.log('Button clicked');\r\n");
      out.write("		    \r\n");
      out.write("		    var roomNum = $(this).data('roomnum');\r\n");
      out.write("		    console.log(roomNum);\r\n");
      out.write("		    \r\n");
      out.write("		    if(confirm('채팅방을 정말 삭제하시겠습니까? 채팅 내역이 다 사라집니다. ')){\r\n");
      out.write("		    	$.ajax({\r\n");
      out.write("					url:\"jsonRoomDelete.do\",\r\n");
      out.write("					data:{room_num:roomNum},\r\n");
      out.write("					method:'GET',\r\n");
      out.write("					dataType:'json',\r\n");
      out.write("					success:function(result){\r\n");
      out.write("						console.log('ajax success:',result);\r\n");
      out.write("						\r\n");
      out.write("						if(result==1){\r\n");
      out.write("							location.href = 'roomSelectAll.do';\r\n");
      out.write("						}\r\n");
      out.write("						\r\n");
      out.write("					},\r\n");
      out.write("					error:function(xhr,status,error){\r\n");
      out.write("						console.log('xhr:',xhr.status);\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("		    }else{\r\n");
      out.write("		    	\r\n");
      out.write("		    }\r\n");
      out.write("		  });\r\n");
      out.write("		\r\n");
      out.write("		var currentStompConnection = null;\r\n");
      out.write("		$('.chat_list').click(function(){\r\n");
      out.write("			roomNum = $(this).data('roomnum');\r\n");
      out.write("			console.log('chat_list click ',roomNum);\r\n");
      out.write("			console.log('user_id : ',user_id);\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			if (currentStompConnection !== null) {\r\n");
      out.write("		        currentStompConnection.disconnect();\r\n");
      out.write("		        currentStompConnection = null;\r\n");
      out.write("		        $(\".msg_send_btn\").off(\"click\");\r\n");
      out.write("		    }\r\n");
      out.write("\r\n");
      out.write("				var sockJs = new SockJS('/idle/chat/'+roomNum+'/info');\r\n");
      out.write("				var stomp = Stomp.over(sockJs);\r\n");
      out.write("				currentStompConnection = stomp;\r\n");
      out.write("				\r\n");
      out.write("				stomp.connect({},function(frame){\r\n");
      out.write("					console.log('Connected : '+frame);\r\n");
      out.write("					console.log('연결 성공!');\r\n");
      out.write("					\r\n");
      out.write("					readCheck(roomNum);\r\n");
      out.write("					\r\n");
      out.write("					readCount(roomNum,user_id);\r\n");
      out.write("					\r\n");
      out.write("					$('.msg_history').empty();\r\n");
      out.write("					\r\n");
      out.write("					$.ajax({\r\n");
      out.write("						url:\"jsonMessageSelectAll.do\",\r\n");
      out.write("						data:{room_num:roomNum},\r\n");
      out.write("						method:'GET',\r\n");
      out.write("						dataType:'json',\r\n");
      out.write("						success:function(vos){\r\n");
      out.write("							console.log('ajax success:',vos);\r\n");
      out.write("							\r\n");
      out.write("							let str = ``;\r\n");
      out.write("							\r\n");
      out.write("							$.each(vos,function(index,vo){\r\n");
      out.write("								let date = new Date(vo.message_date).toLocaleString();\r\n");
      out.write("								if (vo.sender === user_id) {\r\n");
      out.write("									str += `\r\n");
      out.write("										<div class=\"outgoing_msg\">\r\n");
      out.write("							              <div class=\"sent_msg\">\r\n");
      out.write("							             	<div align=\"right\">${vo.sender}</div>\r\n");
      out.write("							                <p>${vo.message}</p>\r\n");
      out.write("							                <span class=\"time_date\">${date}</span> </div>\r\n");
      out.write("							            </div>\r\n");
      out.write("									`;\r\n");
      out.write("								} else {\r\n");
      out.write("									str += `\r\n");
      out.write("										<div class=\"incoming_msg\">\r\n");
      out.write("							              <div class=\"incoming_msg_img\"> <img src=\"resources/img/thumb_${vo.sender_savename }\"> </div>\r\n");
      out.write("							              <div class=\"received_msg\">\r\n");
      out.write("							              	<p>${vo.sender}</p>\r\n");
      out.write("							                <div class=\"received_withd_msg\">\r\n");
      out.write("							                  <p>${vo.message}</p>\r\n");
      out.write("							                  <span class=\"time_date\">${date}</span></div>\r\n");
      out.write("							              </div>\r\n");
      out.write("							            </div>\r\n");
      out.write("									`;\r\n");
      out.write("								}\r\n");
      out.write("							});\r\n");
      out.write("							$('.msg_history').append(str);\r\n");
      out.write("							\r\n");
      out.write("						},\r\n");
      out.write("						error:function(xhr,status,error){\r\n");
      out.write("							console.log('xhr:',xhr.status);\r\n");
      out.write("						}\r\n");
      out.write("					});\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					stomp.subscribe(\"/sub/chat/room/\" + roomNum, function(message) {\r\n");
      out.write("						console.log(message);\r\n");
      out.write("						var msg = JSON.parse(message.body);\r\n");
      out.write("						\r\n");
      out.write("						let str = ``;\r\n");
      out.write("						\r\n");
      out.write("						let date = new Date(msg.message_date).toLocaleString();\r\n");
      out.write("						\r\n");
      out.write("						let imgnum = jQuery('#'+roomNum).attr(\"src\");\r\n");
      out.write("						console.log(imgnum);\r\n");
      out.write("\r\n");
      out.write("						if (msg.sender === user_id) {\r\n");
      out.write("							\r\n");
      out.write("							str += `\r\n");
      out.write("								<div class=\"outgoing_msg\">\r\n");
      out.write("					              <div class=\"sent_msg\">\r\n");
      out.write("					              	<div align=\"right\">${msg.sender}</div>\r\n");
      out.write("					                <p>${msg.message}</p>\r\n");
      out.write("					                <span class=\"time_date\">${date}</span> </div>\r\n");
      out.write("					            </div>\r\n");
      out.write("							`;\r\n");
      out.write("							$('.msg_history').append(str);\r\n");
      out.write("\r\n");
      out.write("						} else {\r\n");
      out.write("							str += `\r\n");
      out.write("								<div class=\"incoming_msg\">\r\n");
      out.write("					              <div class=\"incoming_msg_img\"> <img src=\"${imgnum}\"> </div>\r\n");
      out.write("					              <div class=\"received_msg\">\r\n");
      out.write("					              	<p>${msg.sender}</p>\r\n");
      out.write("					                <div class=\"received_withd_msg\">\r\n");
      out.write("					                  <p>${msg.message}</p>\r\n");
      out.write("					                  <span class=\"time_date\">${date}</span></div>\r\n");
      out.write("					              </div>\r\n");
      out.write("					            </div>\r\n");
      out.write("							`;\r\n");
      out.write("							$('.msg_history').append(str);\r\n");
      out.write("							\r\n");
      out.write("							readCheck(roomNum);\r\n");
      out.write("							readCount(roomNum,user_id);\r\n");
      out.write("							prepareScroll();\r\n");
      out.write("						}\r\n");
      out.write("					});\r\n");
      out.write("					stomp.subscribe(\"/sub/chat/roomDeleted\" + roomNum, function(result){\r\n");
      out.write("						console.log(result);\r\n");
      out.write("						\r\n");
      out.write("						let str = `\r\n");
      out.write("							<div class=\"incoming_msg\">\r\n");
      out.write("				              <div class=\"incoming_msg_img\"></div>\r\n");
      out.write("				              <div class=\"received_msg\">\r\n");
      out.write("				                <div class=\"received_withd_msg\">\r\n");
      out.write("				                  <p>상대방이 채팅방을 삭제했습니다. 더이상 채팅을 진행할 수 없습니다.</p>\r\n");
      out.write("				                  <span class=\"time_date\"></span></div>\r\n");
      out.write("				              </div>\r\n");
      out.write("				            </div>\r\n");
      out.write("						`;\r\n");
      out.write("						$('.msg_history').append(str);\r\n");
      out.write("						prepareScroll();\r\n");
      out.write("					});\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					prepareScroll();\r\n");
      out.write("					\r\n");
      out.write("				});\r\n");
      out.write("				\r\n");
      out.write("				$(\".msg_send_btn\").on(\"click\", function(e) {\r\n");
      out.write("					var msg = document.getElementById(\"msg\");\r\n");
      out.write("\r\n");
      out.write("					console.log(user_id + \" : \" + msg.value);\r\n");
      out.write("					stomp.send('/pub/chat/message', {}, JSON.stringify({\r\n");
      out.write("						room_num : roomNum,\r\n");
      out.write("						message : msg.value,\r\n");
      out.write("						sender : user_id\r\n");
      out.write("					}));\r\n");
      out.write("					msg.value = '';\r\n");
      out.write("					readCheck(roomNum);\r\n");
      out.write("					readCount(roomNum,user_id);\r\n");
      out.write("					prepareScroll();\r\n");
      out.write("				});	\r\n");
      out.write("\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$('#msg').keyup(function(event){\r\n");
      out.write("			if(event.which === 13){\r\n");
      out.write("				$(\"#bt\").click();\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	function scrollUI(){\r\n");
      out.write("		let chatUI = document.querySelector('.msg_history');\r\n");
      out.write("		chatUI.scrollTop = chatUI.scrollHeight;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function prepareScroll() {\r\n");
      out.write("		  window.setTimeout(scrollUI, 50);\r\n");
      out.write("		}\r\n");
      out.write("	\r\n");
      out.write("	function readCheck(roomNum){\r\n");
      out.write("		console.log('방 입장 후 읽음으로 변경');\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url:\"readCheck.do\",\r\n");
      out.write("			data:{\r\n");
      out.write("				room_num: roomNum,\r\n");
      out.write("				sender: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\r\n");
      out.write("			},\r\n");
      out.write("			method: 'post',\r\n");
      out.write("			dataType: 'json',\r\n");
      out.write("			success: function(result){\r\n");
      out.write("				console.log('result : ',result);\r\n");
      out.write("			},\r\n");
      out.write("			error: function(xhr, status, error) {\r\n");
      out.write("	            console.log('xhr:', xhr.status);\r\n");
      out.write("	        }\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function readCount(roomNum,user_id){\r\n");
      out.write("		console.log('방 입장 후 않읽은 메세지수 변경');\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: 'jsonReadCount.do',\r\n");
      out.write("			data: {\r\n");
      out.write("				room_num:roomNum,\r\n");
      out.write("				sender:user_id\r\n");
      out.write("			},\r\n");
      out.write("			method: 'GET',\r\n");
      out.write("			dataType: 'json',\r\n");
      out.write("			success: function(result){\r\n");
      out.write("				console.log('않읽은 메세지 수 : ',result);\r\n");
      out.write("				if(result>0){\r\n");
      out.write("					$('#readCount_'+roomNum).text('않읽은 메세지 수 : '+result);\r\n");
      out.write("				}else{\r\n");
      out.write("					$('#readCount_'+roomNum).text('');\r\n");
      out.write("				}\r\n");
      out.write("			},\r\n");
      out.write("			error: function(xhr, status, error) {\r\n");
      out.write("			      console.log('xhr:', xhr.status);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../top_menu.jsp", out, false);
      out.write("\r\n");
      out.write("	<section style=\"padding-left: 100px; padding-right: 100px;\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<h3 class=\" text-center\">채팅</h3>\r\n");
      out.write("			<h5 id=\"test\"></h5>\r\n");
      out.write("			<div class=\"messaging\">\r\n");
      out.write("				<div class=\"inbox_msg\">\r\n");
      out.write("					<div class=\"inbox_people\">\r\n");
      out.write("						<div class=\"headind_srch\">\r\n");
      out.write("							<div class=\"recent_heading\">\r\n");
      out.write("								<h4>채팅목록</h4>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"inbox_chat\" id=\"roomList\">\r\n");
      out.write("							");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"mesgs\">\r\n");
      out.write("\r\n");
      out.write("						<div class=\"msg_history\" id=\"scroll\"></div>\r\n");
      out.write("						<div class=\"type_msg\">\r\n");
      out.write("							<div class=\"input_msg_write\">\r\n");
      out.write("								<input type=\"text\" class=\"write_msg\"\r\n");
      out.write("									placeholder=\"Type a message\" id=\"msg\" />\r\n");
      out.write("								<button class=\"msg_send_btn\" type=\"button\" id=\"bt\">\r\n");
      out.write("									<i class=\"fa fa-paper-plane-o\" aria-hidden=\"true\"></i>\r\n");
      out.write("								</button>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</section>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/room/selectAll.jsp(307,7) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("vo");
      // /WEB-INF/views/room/selectAll.jsp(307,7) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/room/selectAll.jsp(307,7) '${vos }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${vos }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("								<div class=\"chat_list\" data-roomnum=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.room_num }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("									<div class=\"chat_people\">\r\n");
            out.write("										<div class=\"chat_img\">\r\n");
            out.write("											<img src=\"resources/img/thumb_");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.member_savename }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"\r\n");
            out.write("												id=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.room_num }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("										</div>\r\n");
            out.write("										<div class=\"chat_ib\">\r\n");
            out.write("											");
            if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("											");
            if (_jspx_meth_c_005fif_005f2(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("										</div>\r\n");
            out.write("									</div>\r\n");
            out.write("								</div>\r\n");
            out.write("							");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/views/room/selectAll.jsp(315,11) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user_id eq vo.buyer }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("												");
          if (_jspx_meth_c_005fif_005f1(_jspx_th_c_005fif_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("												<h5>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.board_title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(",\r\n");
          out.write("													가격:");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.price }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(" <span class=\"chat_date\"><button\r\n");
          out.write("															id=\"delete\" data-roomnum=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.room_num}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">삭제</button></span>\r\n");
          out.write("												</h5>\r\n");
          out.write("												<h5>글쓴이와의 채팅</h5>\r\n");
          out.write("												<h5>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.seller }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\r\n");
          out.write("													<span class=\"chat_date\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.room_date }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</span>\r\n");
          out.write("												</h5>\r\n");
          out.write("											");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /WEB-INF/views/room/selectAll.jsp(316,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.readcount ne 0 }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("													<h5 style=\"color: red;\" id=\"readCount_");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.room_num }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">않읽은\r\n");
          out.write("														메세지수 : ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.readcount }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</h5>\r\n");
          out.write("												");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/views/room/selectAll.jsp(329,11) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user_id eq vo.seller }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("												");
          if (_jspx_meth_c_005fif_005f3(_jspx_th_c_005fif_005f2, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("												<h5>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.board_title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(",\r\n");
          out.write("													가격:");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.price }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(" <span class=\"chat_date\"><button\r\n");
          out.write("															id=\"delete\" data-roomnum=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.room_num}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">삭제</button></span>\r\n");
          out.write("												</h5>\r\n");
          out.write("												<h5>거래희망자와의 채팅</h5>\r\n");
          out.write("												<h5>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.buyer }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\r\n");
          out.write("													<span class=\"chat_date\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.room_date }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</span>\r\n");
          out.write("												</h5>\r\n");
          out.write("											");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f2, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f2);
      // /WEB-INF/views/room/selectAll.jsp(330,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.readcount ne 0 }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("													<h5 style=\"color: red;\" id=\"readCount_");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.room_num }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">않읽은\r\n");
          out.write("														메세지수 : ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.readcount }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</h5>\r\n");
          out.write("												");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }
}
